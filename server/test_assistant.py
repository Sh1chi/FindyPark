import requests
import uuid
import json
from app.core.config import get_settings

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ SSL
import urllib3

urllib3.disable_warnings()

settings = get_settings()


def get_giga_token() -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è GigaChat API"""
    url = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'RqUID': str(uuid.uuid4()),
        'Authorization': f'Basic {settings.sber_auth}'
    }
    payload = {'scope': 'GIGACHAT_API_PERS'}

    response = requests.post(url, headers=headers, data=payload, verify=False)
    response.raise_for_status()
    return response.json()['access_token']


def ask_gigachat(question: str) -> str:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–æ–ø—Ä–æ—Å –≤ GigaChat –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç"""
    token = get_giga_token()
    url = "https://gigachat.devices.sberbank.ru/api/v1/chat/completions"
    headers = {
        'Content-Type': 'application/json',
        'Authorization': f'Bearer {token}'
    }
    payload = json.dumps({
        "model": "GigaChat",
        "messages": [{"role": "user", "content": question}],
        "temperature": 1,
        "max_tokens": 1024
    })

    response = requests.post(url, headers=headers, data=payload, verify=False)
    response.raise_for_status()
    return response.json()['choices'][0]['message']['content']


if __name__ == "__main__":
    print("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å (exit –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
    while True:
        try:
            question = input("> ")
            if question.lower() == 'exit':
                break
            response = ask_gigachat(question)
            print(f"\nü§ñ {response}\n")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")